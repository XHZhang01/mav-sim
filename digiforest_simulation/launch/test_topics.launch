<?xml version="1.0"?>
<launch>
  <arg name="world_name" default="field"/>
  <arg name="robot_name" default="realsense"/>
  <arg name="robot_type" default="realsense"/>
  <arg name="link_name" value="base_link"/>
  <arg name="sensor_prefix" value="/world/$(arg world_name)/model/$(arg robot_name)/link/$(arg link_name)/sensor"/>
  
  <node
    pkg="ros_ign_bridge"
    type="parameter_bridge"
    name="ros_ign_bridge_clock"
    args="/clock@rosgraph_msgs/Clock[ignition.msgs.Clock">
  </node>
  
  <group ns="$(arg robot_name)">
    <!--Create multipe bridges so that it can run in parallel-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_pose"
      args="/model/$(arg robot_name)/pose@tf2_msgs/TFMessage[ignition.msgs.Pose_V">
      <remap from="/model/$(arg robot_name)/pose" to="/tf"/>
    </node>
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_pose_static"
      args="/model/$(arg robot_name)/pose_static@tf2_msgs/TFMessage[ignition.msgs.Pose_V">
      <remap from="/model/$(arg robot_name)/pose_static" to="/tf_static"/>
    </node>

    <!--IMU-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_imu"
      args="$(arg sensor_prefix)/imu_sensor/imu@sensor_msgs/Imu[ignition.msgs.IMU">
      <remap from="$(arg sensor_prefix)/imu_sensor/imu" to="imu/data"/>
    </node>

    <!--Stereo camera -->
    <!--Left-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_camera_left"
      args="$(arg sensor_prefix)/camera_left/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg sensor_prefix)/camera_left/camera_info" to="left/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_camera_left"
      args="$(arg sensor_prefix)/camera_left/image">
      <remap from="$(arg sensor_prefix)/camera_left/image" to="left/image_raw"/>
    </node>
    <!--Right-->
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_camera_right"
      args="$(arg sensor_prefix)/camera_right/camera_info@sensor_msgs/CameraInfo[ignition.msgs.CameraInfo">
      <remap from="$(arg sensor_prefix)/camera_right/camera_info" to="right/camera_info"/>
    </node>
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_image_camera_right"
      args="$(arg sensor_prefix)/camera_right/image">
      <remap from="$(arg sensor_prefix)/camera_right/image" to="right/image_raw"/>
    </node>
    
    <!--RGBD camera-->
    <node
      pkg="ros_ign_image"
      type="image_bridge"
      name="ros_ign_depth_cam"
      args="$(arg sensor_prefix)/camera_dep/depth_image">
      <remap from="$(arg sensor_prefix)/camera_dep/depth_image" to="depth_image"/>
    </node>

    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_depth_cam_points"
      args="$(arg sensor_prefix)/camera_dep/depth_image/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
      <remap from="$(arg sensor_prefix)/camera_dep/depth_image/points" to="depth_points"/>
    </node>

    <!-- <node
      pkg="subt_ros"
      type="optical_frame_publisher"
      name="optical_frame_publisher_depth"
      args="depth">
      <remap from="input/image" to="front/depth" />
      <remap from="output/image" to="front/optical/depth" />
    </node> -->

    <!--Front Laser-->
    <!--
    <node
      pkg="ros_ign_bridge"
      type="parameter_bridge"
      name="ros_ign_bridge_lidar3d"
      args="$(arg sensor_prefix)/front_laser/scan/points@sensor_msgs/PointCloud2[ignition.msgs.PointCloudPacked">
      <remap from="$(arg sensor_prefix)/front_laser/scan/points" to="points"/>
    </node>

    <node
        pkg="ros_ign_bridge"
        type="parameter_bridge"
        name="ros_ign_bridge_gpu_lidar_front_cliff"
        args="$(arg sensor_prefix)/front_cliff_laser/scan@sensor_msgs/LaserScan[ignition.msgs.LaserScan">
      <remap from="$(arg sensor_prefix)/front_cliff_laser/scan" to="front_cliff_scan"/>
    </node>
    -->

  </group>
</launch>
